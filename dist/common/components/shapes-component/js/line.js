!function(){"use strict"
ShapesComponent.Shapes.Line=function(e){this.graphicsRenderer=new PIXI.Graphics,this.canvasWidth=e.canvasWidth,this.canvasHeight=e.canvasHeight,this.shapeType=e.shapeType,this.lineType=e.lineType||ShapesComponent.Shapes.Line.LINE_TYPE.LINE,this.canvasCoord1=e.canvasCoord1,this.canvasCoord2=e.canvasCoord2,this.arrowHead1=null,this.arrowHead2=null,this.lineColor=e.lineColor||ShapesComponent.Shapes.Line.DEFAULT_LINE_COLOR,this.lineWidth=e.lineWidth||ShapesComponent.Shapes.Line.DEFAULT_LINE_WIDTH,this.lineAlpha=e.lineAlpha||ShapesComponent.Shapes.Line.DEFAULT_LINE_ALPHA,this.lineSlope=null,this.yIntercept=null,this.sources=[],this.downPosition={},this.gridGraphView=null,this.graphView=null,this.lineId=null,this.isPositiveInfinity=null,this.isSelected=null}
var e=ShapesComponent.Shapes.Line.prototype
e.createShape=function(){this.drawShape(),this.bindEvents()},e.bindEvents=function(){this.graphicsRenderer.interactive=!0,this.graphicsRenderer.buttonMode=!0,this.graphicsRenderer.mouseover=$.proxy(function(e){e.stopPropagation()},this),this.graphicsRenderer.mouseout=$.proxy(function(e){e.stopPropagation()},this),this.graphicsRenderer.touchstart=this.graphicsRenderer.mousedown=$.proxy(function(e){var i=this.graphView.model
e.stopPropagation(),i.idSelectedEqPanel!==i.constants.INVALID_VALUE&&i.idSelectedEqPanel!==this.equationPanelData.idEquationPanel&&i.trigger("onDeselectingEquationPanel",{eqPanelId:i.idSelectedEqPanel}),i.idSelectedEqPanel=this.equationPanelData.idEquationPanel,i.trigger("onSelectingEquationPanel",{eqPanelId:i.idSelectedEqPanel}),this.selectLine(),i.trigger("changeEquationSelection",{affectedEqPanelId:i.idSelectedEqPanel,idSelectedLine:this.lineId}),this.downPosition=_.clone(e.data.global),this.graphicsRenderer.touchmove=this.graphicsRenderer.mousemove=null,this.graphicsRenderer.touchmove=this.graphicsRenderer.mousemove=$.proxy(function(e){var i,t,n
e.stopPropagation(),i=e.data.global.x-this.downPosition.x,t=e.data.global.y-this.downPosition.y,this.downPosition=_.clone(e.data.global)
for(n in this.sources)this.sources[n].update(i,t)
this.update()},this),window.ontouchend=window.onmouseup=$.proxy(function(e){this.graphicsRenderer.touchmove=this.graphicsRenderer.mousemove=null,window.touchend=window.onmouseup=null,this.downPosition=null},this)},this),this.graphicsRenderer.touchend=this.graphicsRenderer.mouseup=$.proxy(function(e){e.stopPropagation(),this.graphicsRenderer.touchmove=this.graphicsRenderer.mousemove=null,this.downPosition=null},this)},e.changeObjectVisibility=function(e){this.sources
this.graphicsRenderer.visible=e,this.gridGraphView._refreshGridGraph()},e.updateSourcePointStyle=function(e){var i,t=this.sources.slice(),n=t.length,s=this.graphView.model
for(e.lineTypeId===s.constants.NEG_INFINITY_RAY&&(t=t.reverse()),i=0;n>i;i++)0===i?t[i].changePointStyle(e.xRangeLeftRelation===s.constants.LESS_THAN_OR_EQUAL):1===i&&t[i].changePointStyle(e.xRangeRightRelation===s.constants.LESS_THAN_OR_EQUAL)},e["delete"]=function(){var e,i=this.graphView.model,t=this.sources
for(e in t)t[e]["delete"]()
this.graphicsRenderer.clear(),this.graphicsRenderer.hitArea=null,this.graphicsRenderer.mousedown=null,this.graphicsRenderer.mousemove=null,this.graphicsRenderer.mouseup=null,this.graphicsRenderer.touchstart=null,this.graphicsRenderer.touchmove=null,this.graphicsRenderer.touchend=null,this.changeObjectVisibility(!1),i.selectedLine&&this.lineId===i.selectedLine.lineId&&(this.graphView.model.seelctedLine=null)},e.selectLine=function(){var e=this.graphView.model
e.selectedLine&&e.selectedLine.lineId===this.lineId&&e.idSelectedEqPanel!==e.constants.INVALID_VALUE&&e.idSelectedEqPanel===this.equationPanelData.idSelectedEqPanel||(e.selectedLine&&e.selectedLine.deselectLine(),e.selectedLine=this,this.equationPanelData.idSelectedLine=this.lineId,this.shapeObject.lineWidth=ShapesComponent.Shapes.Line.DEFAULT_SELECTED_LINE_WIDTH,this.isSelected=!0,this.gridGraphView._refreshGridGraph(),e.trigger("onSelectLine"))},e.deselectLine=function(){this.graphView.model.selectedLine=null,this.shapeObject.lineWidth=ShapesComponent.Shapes.Line.DEFAULT_LINE_WIDTH,this.isSelected=!1,this.gridGraphView._refreshGridGraph()},e.updateArrowHead=function(){var e=this.arrowHead2.shape.points,i=this.canvasCoord2,t=this.getArrowPoints(i)
e[0]=i.x,e[1]=i.y,e[2]=t[0],e[3]=t[1],e[4]=t[2],e[5]=t[3]},e.updateRayInfinity=function(){var e,i,t=this.sources,n=this.graphView,s=n.model,a=this.equationPanelData,o=a.lineData[a.idSelectedLine],h=this.shapeObject.shape.points
for(i in t)if(0===t[i].shapeObject.shape.radius){e=Number(i)
break}o.displacement=s.getIntercept(o),t[e].graphCoord=this.isPositiveInfinity?s.getHighGraphPointFromSlope(o.slope,o.displacement):s.getLowGraphPointFromSlope(o.slope,o.displacement),this.isPositiveInfinity?(o.x2=t[e].graphCoord.x,o.y2=t[e].graphCoord.y):(o.x1=t[e].graphCoord.x,o.y1=t[e].graphCoord.y),t[e].canvasCoord=this.gridGraphView.model.convertToCanvasCoordinates(t[e].graphCoord),h[2*e]=t[e].canvasCoord.x,h[2*e+1]=t[e].canvasCoord.y,0===e?(this.canvasCoord1.x=t[e].canvasCoord.x,this.canvasCoord1.y=t[e].canvasCoord.y):(this.canvasCoord2.x=t[e].canvasCoord.x,this.canvasCoord2.y=t[e].canvasCoord.y)},e.update=function(){var e,i,t,n,s,a=this.sources,o=this.graphView.model,h=this.equationPanelData,r=h.lineData[h.idSelectedLine],d=this.shapeObject.shape.points,c=a.length,l=0
switch(this.lineType){case 0:for(l=0;c>l;l++)e=a[l],i=[e.shapeObject.shape.x,e.shapeObject.shape.y],t=e.graphCoord,0===l?(this.canvasCoord1.x=i[0],this.canvasCoord1.y=i[1]):(this.canvasCoord2.x=i[0],this.canvasCoord2.y=i[1]),d[2*l]=i[0],d[2*l+1]=i[1],s=this.isPositiveInfinity?l:0===l?1:0,r["x"+(s+1)]=Number(t.x.toFixed(1)),r["y"+(s+1)]=Number(t.y.toFixed(1))
this.updateRayInfinity(),this.updateArrowHead()
break
case 1:for(l=0;c>l;l++)e=a[l],i=[e.shapeObject.shape.x,e.shapeObject.shape.y],t=e.graphCoord,0===l?(this.canvasCoord1.x=i[0],this.canvasCoord1.y=i[1]):(this.canvasCoord2.x=i[0],this.canvasCoord2.y=i[1]),d[2*l]=i[0],d[2*l+1]=i[1],r["x"+(l+1)]=Number(t.x.toFixed(1)),r["y"+(l+1)]=Number(t.y.toFixed(1))}for(n in o.equationPanelData)this.idEquationPanel===n?o.equationPanelData[n].idSelectedLine=this.lineId:o.equationPanelData[n].idSelectedLine="line1"
this._setHitArea(d),o.trigger("OnLineDataDragged",{affectedEqPanelId:o.idSelectedEqPanel}),this.gridGraphView._refreshGridGraph()},e.drawShape=function(){var e=null,i=null,t=null
if(this.lineSlope=this.canvasCoord2.x-this.canvasCoord1.x!==0?(this.canvasCoord2.y-this.canvasCoord1.y)/(this.canvasCoord2.x-this.canvasCoord1.x):0,this.yIntercept=this.canvasCoord1.y-this.lineSlope*this.canvasCoord1.x,this.lineType===ShapesComponent.Shapes.Line.LINE_TYPE.LINE_SEGMENT)t=[this.canvasCoord1.x,this.canvasCoord1.y,this.canvasCoord2.x,this.canvasCoord2.y]
else{if(isNaN(this.lineSlope))return
i=isFinite(this.lineSlope)?{canvasCoord1:{x:this.canvasCoord1.x,y:this.canvasCoord1.y},canvasCoord2:{x:this.canvasCoord2.x,y:this.canvasCoord2.y}}:{canvasCoord1:{x:this.canvasCoord1.x,y:0},canvasCoord2:{x:this.canvasCoord2.x,y:this.canvasHeight}},t=[i.canvasCoord1.x,i.canvasCoord1.y,i.canvasCoord2.x,i.canvasCoord2.y]}this.shapeObject?this.shapeObject.shape.points=t:(e=new PIXI.Polygon(t),this.shapeObject=this.graphicsRenderer.beginFill(this.lineColor).lineStyle(this.lineWidth,this.lineColor,this.lineAlpha).drawShape(e)),this.lineType===ShapesComponent.Shapes.Line.LINE_TYPE.LINE&&(this.arrowHead2=this._drawArrowHead(i.canvasCoord2)),this._setHitArea(t),this.graphicsRenderer.visible=!1},e.moveLineEnd=function(e){var i=this.graphicsRenderer.graphicsData
this.arrowHead1&&this.arrowHead2&&(delete i.splice(i.indexOf(this.arrowHead1),1),delete i.splice(i.indexOf(this.arrowHead2),1),this.arrowHead1=null,this.arrowHead2=null),this.canvasCoord2=e,this.drawShape()},e._getNewLineCoords=function(){var e={},i=null,t=null,n=0,s=this.canvasWidth,a=0,o=this.canvasHeight,h=null,r=null,d=this.lineSlope,c=this.yIntercept
return r=d*n+c,r>=0&&o>=r&&(i={x:n,y:r}),r=d*s+c,r>=0&&o>=r&&(i?t={x:s,y:r}:i={x:s,y:r}),i&&t||(h=(a-c)/d,h>=0&&s>=h&&(i?t={x:h,y:a}:i={x:h,y:a})),i&&t||(h=(o-c)/d,h>=0&&s>=h&&(i?t={x:h,y:o}:i={x:h,y:o})),e.canvasCoord1=i,e.canvasCoord2=t,e},e.getArrowPoints=function(e){var i=this.canvasCoord1.x-e.x>=0?1:-1,t=this.canvasCoord1.y-e.y>=0?1:-1,n=10,s=Math.abs(Math.atan(this.lineSlope)),a={x:e.x+n*Math.cos(s)*i,y:e.y+n*Math.sin(s)*t},o=null
return o=this._getCoordsOnPerpendicularLineAtPoint(a,n/2)},e._drawArrowHead=function(e){var i=null,t=null,n=this.getArrowPoints(e)
return i=new PIXI.Polygon(e.x,e.y,n[0],n[1],n[2],n[3]),t=this.graphicsRenderer.beginFill(this.lineColor).lineStyle(1,this.lineColor,this.lineAlpha).drawShape(i)},e._getCoordsOnPerpendicularLineAtPoint=function(e,i){var t=-1/this.lineSlope,n=e.y-t*e.x,s=Math.atan(t),a=null,o=null,h=null,r=null,d=[]
return 0===this.lineSlope?(a=e.x,o=e.y+i,h=e.x,r=e.y-i):(a=e.x-i*Math.cos(s),o=t*a+n,h=e.x+i*Math.cos(s),r=t*h+n),d=[a,o,h,r]},e.findSegmentPointAtADistance=function(e,i,t){var n,s,a,o
return n=Math.sqrt(Math.pow(e.x-i.x,2)+Math.pow(e.y-i.y,2)),s=0===n?0:t/n,a=(1-s)*e.x+s*i.x,o=(1-s)*e.y+s*i.y,[a,o]},e.rotatePoint=function(e,i,t,n,s,a,o){a&&(s*=Math.PI/180),o&&(s*=-1)
var h=Math.cos(s),r=Math.sin(s),d=e-t,c=i-n
return[t+d*h-c*r,n+d*r+c*h]},e._setHitArea=function(e){var i,t,n,s,a;({x:e[0],y:e[1]}),{x:e[2],y:e[3]}
"ontouchstart"in window?(a=this.findSegmentPointAtADistance(this.canvasCoord1,this.canvasCoord2,10),i=this.rotatePoint(a[0],a[1],this.canvasCoord1.x,this.canvasCoord1.y,90,!0,!1),t=this.rotatePoint(a[0],a[1],this.canvasCoord1.x,this.canvasCoord1.y,90,!0,!0),a=this.findSegmentPointAtADistance(this.canvasCoord2,this.canvasCoord1,10),n=this.rotatePoint(a[0],a[1],this.canvasCoord2.x,this.canvasCoord2.y,90,!0,!1),s=this.rotatePoint(a[0],a[1],this.canvasCoord2.x,this.canvasCoord2.y,90,!0,!0)):(a=this.findSegmentPointAtADistance(this.canvasCoord1,this.canvasCoord2,5),i=this.rotatePoint(a[0],a[1],this.canvasCoord1.x,this.canvasCoord1.y,90,!0,!1),t=this.rotatePoint(a[0],a[1],this.canvasCoord1.x,this.canvasCoord1.y,90,!0,!0),a=this.findSegmentPointAtADistance(this.canvasCoord2,this.canvasCoord1,5),n=this.rotatePoint(a[0],a[1],this.canvasCoord2.x,this.canvasCoord2.y,90,!0,!1),s=this.rotatePoint(a[0],a[1],this.canvasCoord2.x,this.canvasCoord2.y,90,!0,!0)),this.graphicsRenderer.hitArea?this.graphicsRenderer.hitArea.points=[i[0],i[1],t[0],t[1],n[0],n[1],s[0],s[1]]:this.graphicsRenderer.hitArea=new PIXI.Polygon([i[0],i[1],t[0],t[1],n[0],n[1],s[0],s[1]])},ShapesComponent.Shapes.Line.LINE_TYPE={LINE:0,LINE_SEGMENT:1},ShapesComponent.Shapes.Line.DEFAULT_LINE_COLOR=0,ShapesComponent.Shapes.Line.DEFAULT_LINE_WIDTH=1,ShapesComponent.Shapes.Line.DEFAULT_SELECTED_LINE_WIDTH=5,ShapesComponent.Shapes.Line.DEFAULT_LINE_ALPHA=1}(ShapesComponent)
